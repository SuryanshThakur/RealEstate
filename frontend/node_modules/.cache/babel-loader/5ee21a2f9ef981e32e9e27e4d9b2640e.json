{"ast":null,"code":"import { LIST_LOADING, GET_LISTING, ADD_LISTING, C_LIKE, GET_SINGLE_LIST } from '../actions/types';\nconst initialState = {\n  listings: [],\n  list: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_LISTING:\n      return { ...state,\n        listings: action.payload,\n        loading: false\n      };\n\n    case ADD_LISTING:\n      return { ...state,\n        listings: [action.payload, ...state.listings],\n        loading: false\n      };\n\n    case C_LIKE:\n      console.log(action);\n      const updatedLists = state.listings.map(list => {\n        if (list._id !== action.payload.value._id) {\n          return list;\n        }\n\n        return { ...list,\n          ...action.payload.value\n        };\n      });\n      return { ...state,\n        listings: updatedLists,\n        loading: false\n      };\n\n    case LIST_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_SINGLE_LIST:\n      return { ...state,\n        list: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/suryansh/Downloads/Mern---Real-Estate/frontend/src/reducers/listReducer.js"],"names":["LIST_LOADING","GET_LISTING","ADD_LISTING","C_LIKE","GET_SINGLE_LIST","initialState","listings","list","loading","state","action","type","payload","console","log","updatedLists","map","_id","value"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,EAAiDC,MAAjD,EAAyDC,eAAzD,QAAgF,kBAAhF;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,WAAL;AAAkB,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAA7B;AAAsCJ,QAAAA,OAAO,EAAE;AAA/C,OAAP;;AAElB,SAAKN,WAAL;AAAkB,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,QAAQ,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,QAA1B,CAAtB;AAA2DE,QAAAA,OAAO,EAAE;AAApE,OAAP;;AAElB,SAAKL,MAAL;AAAaU,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACT,YAAMK,YAAY,GAAGN,KAAK,CAACH,QAAN,CAAeU,GAAf,CAAoBT,IAAD,IAAU;AAC9C,YAAIA,IAAI,CAACU,GAAL,KAAaP,MAAM,CAACE,OAAP,CAAeM,KAAf,CAAqBD,GAAtC,EAA2C;AACvC,iBAAOV,IAAP;AACH;;AACD,eAAO,EAAE,GAAGA,IAAL;AAAW,aAAGG,MAAM,CAACE,OAAP,CAAeM;AAA7B,SAAP;AACH,OALoB,CAArB;AAMA,aAAO,EACH,GAAGT,KADA;AACOH,QAAAA,QAAQ,EAAES,YADjB;AAC+BP,QAAAA,OAAO,EAAE;AADxC,OAAP;;AAGJ,SAAKR,YAAL;AAAmB,aAAO,EACtB,GAAGS,KADmB;AAEtBD,QAAAA,OAAO,EAAE;AAFa,OAAP;;AAInB,SAAKJ,eAAL;AAAsB,aAAO,EACzB,GAAGK,KADsB;AAEzBF,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAFY;AAGzBJ,QAAAA,OAAO,EAAE;AAHgB,OAAP;;AAMtB;AACI,aAAOC,KAAP;AA1BR;AA6BH","sourcesContent":["import { LIST_LOADING, GET_LISTING, ADD_LISTING, C_LIKE, GET_SINGLE_LIST } from '../actions/types';\nconst initialState = {\n    listings: [],\n    list: [],\n    loading: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_LISTING: return { ...state, listings: action.payload, loading: false }\n\n        case ADD_LISTING: return { ...state, listings: [action.payload, ...state.listings], loading: false };\n\n        case C_LIKE: console.log(action);\n            const updatedLists = state.listings.map((list) => {\n                if (list._id !== action.payload.value._id) {\n                    return list;\n                }\n                return { ...list, ...action.payload.value }\n            })\n            return {\n                ...state, listings: updatedLists, loading: false\n            }\n        case LIST_LOADING: return {\n            ...state,\n            loading: true\n        };\n        case GET_SINGLE_LIST: return {\n            ...state,\n            list: action.payload,\n            loading: false\n        };\n\n        default:\n            return state;\n    }\n\n} "]},"metadata":{},"sourceType":"module"}